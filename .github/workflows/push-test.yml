name: Gradle test On GitHub Action
on:
  push:
    branches-ignore: ['main','master']

jobs:
  onPushTest:
    runs-on: ubuntu-latest
    steps:
      - name: '소스 checkout'
        uses: actions/checkout@master

      - name: 'jdk21 setup'
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'gradle'

      - name: 'gradle test'
        run: |
          echo "Available processors: $(nproc)"
          gradle test --no-daemon --parallel

      - name: '커버리지 정보 및 요약'
        run: |
          echo 'CSV 파일에서 커버리지 정보 추출';
          awk -F',' 'NR > 1 {instructions_covered += $5; instructions_missed += $4; branches_covered += $7; branches_missed += $6} END {print instructions_covered, instructions_missed, branches_covered, branches_missed}' build/reports/jacoco/test/jacocoTestReport.csv > coverage.txt
          read instructions_covered instructions_missed branches_covered branches_missed < coverage.txt               
          echo '커버리지 계산'; 
          total_instructions=$((instructions_covered + instructions_missed))
          total_branches=$((branches_covered + branches_missed))
          instruction_coverage=$(echo "scale=2; $instructions_covered / $total_instructions * 100" | bc)
          echo '분모가 0일 경우, 커버리지를 'N/A'로 설정';
          if [ "$total_instructions" -eq 0 ]; then
            instruction_coverage="N/A"
          else
            instruction_coverage=$(echo "scale=2; $instructions_covered / $total_instructions * 100" | bc)%
          fi
          if [ "$total_branches" -eq 0 ]; then
            branch_coverage="N/A"
          else
            branch_coverage=$(echo "scale=2; $branches_covered / $total_branches * 100" | bc)%
          fi
          echo '# GitHub Action Summary' >> PUSH_summary.md
          echo 'GITHUB_STEP_SUMMARY에 커버리지 정보 추가';
          echo "## JaCoCo 커버리지 요약" >> PUSH_summary.md
          echo "- Instruction Coverage: $instruction_coverage" >> PUSH_summary.md
          echo "- Branch Coverage: $branch_coverage" >> PUSH_summary.md

      - name: 'PMD 리포트 요약'
        run: |
          ls -al PUSH_summary.md
          total_violations=$(grep -c '<violation' build/reports/pmd/main.xml)
          echo '****'
          echo $total_violations
          echo '****'

      - name: '실패 시 보고서 업로드'
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: report-jacoco
          path: |
            build/reports/jacoco/test/html
            build/reports/pmd/*.html

      - name: 'slack 알림'
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          author_name: my workflow bot
          fields: repo,message,commit,author,eventName,ref,workflow,job,took,
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}