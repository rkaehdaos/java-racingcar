plugins {
    id 'java'
    id 'jacoco'
    id 'pmd'
}

version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

pmd {
    toolVersion = "7.0.0"
    consoleOutput = true
    ignoreFailures=false
    incrementalAnalysis=true
    ruleSets = []
    ruleSetFiles= files(rootProject.file(".github/pmd/ruleset.xml") as Object)
}

tasks.named('pmdMain') {
//    excludes =['**/*',]
    includes = ['**/step4_winner/*',]
}
tasks.named('pmdTest') {
    excludes =[
            '**/*',
    ]
}


tasks.named('compileJava') {
    dependsOn clean
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
}

tasks.named('test') {
//    dependsOn clean, pmdMain
    useJUnitPlatform() // Junit5 사용: 테스트 종속성에 JUnit Jupiter API와 JUnit Jupiter Engine을 포함해야 함.
    maxParallelForks = Runtime.runtime.availableProcessors()
    finalizedBy jacocoTestCoverageVerification
}
jacocoTestReport {
    reports { csv.setRequired(true) }
}
jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule { limit { minimum = 0.8 } }
    }
}